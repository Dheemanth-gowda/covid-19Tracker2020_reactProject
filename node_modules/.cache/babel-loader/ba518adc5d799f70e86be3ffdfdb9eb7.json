{"ast":null,"code":"import _regeneratorRuntime from\"/home/dheemanth/React/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/dheemanth/React/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/dheemanth/React/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{MenuItem,FormControl,Select,Card,CardContent}from\"@material-ui/core\";import\"./App.css\";//Import of other files :-\nimport numeral from\"numeral\";import InfoBox from\"./infoBox\";import Map from\"./map\";import Table from\"./Tables\";import{sortData,prettyPrintStat}from\"./util\";import LineGraph from\"./LineGraph\";import\"leaflet/dist/leaflet.css\";//NOTE: UseEffects:- Runs a piece of code only under some given condition.\n// It will run as soon as the component loads for the first time and only once this happens.\nfunction App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),countries=_useState2[0],setCountries=_useState2[1];var _useState3=useState(\"worldwide\"),_useState4=_slicedToArray(_useState3,2),country=_useState4[0],setCountry=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),countryInfo=_useState6[0],setCountryInfo=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),tableData=_useState8[0],setTableData=_useState8[1];var _useState9=useState({lat:20.5937,lng:78.9629}),_useState10=_slicedToArray(_useState9,2),mapCenter=_useState10[0],setMapCenter=_useState10[1];var _useState11=useState(3),_useState12=_slicedToArray(_useState11,2),mapZoom=_useState12[0],setMapZoom=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),mapCountries=_useState14[0],setmapCountries=_useState14[1];var _useState15=useState(\"cases\"),_useState16=_slicedToArray(_useState15,2),casesType=_useState16[0],setCasesType=_useState16[1];useEffect(function(){fetch(\"https://disease.sh/v3/covid-19/all\").then(function(response){return response.json();}).then(function(data){setCountryInfo(data);});},[]);useEffect(function(){var getCountriesData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://disease.sh/v3/covid-19/countries\").then(function(response){return response.json();}).then(function(data){var countries=data.map(function(country){return{name:country.country,value:country.countryInfo.iso2};});var sortedData=sortData(data);setTableData(sortedData);setmapCountries(data);setCountries(countries);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function getCountriesData(){return _ref.apply(this,arguments);};}();getCountriesData();},[]);var onCountrychange=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var countryCode,url;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:countryCode=event.target.value;console.log(countryCode);url=countryCode===\"worldwide\"?\"https://disease.sh/v3/covid-19/all\":\"https://disease.sh/v3/covid-19/countries/\".concat(countryCode);_context2.next=5;return fetch(url).then(function(response){return response.json();}).then(function(data){setCountryInfo(data);setCountry(countryCode);// console.log(data);\ncountryCode===\"worldwide\"?setMapCenter({lat:20.5937,lng:78.9629}):setMapCenter([data.countryInfo.lat,data.countryInfo.long]);setMapZoom(4);});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function onCountrychange(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},/*#__PURE__*/React.createElement(\"div\",{className:\"app__left\"},/*#__PURE__*/React.createElement(\"div\",{className:\"app__header\"},/*#__PURE__*/React.createElement(\"h1\",null,\"COVID-19 TRACKER\"),/*#__PURE__*/React.createElement(FormControl,{className:\"app__dropdown\"},/*#__PURE__*/React.createElement(Select,{className:\"appheader__dropdown\",variant:\"outlined\",value:country,onChange:onCountrychange},/*#__PURE__*/React.createElement(MenuItem,{value:\"worldwide\"},\"worldwide\"),countries.map(function(country){return/*#__PURE__*/React.createElement(MenuItem,{value:country.value},country.name);})))),/*#__PURE__*/React.createElement(\"div\",{className:\"app_stats\"},/*#__PURE__*/React.createElement(InfoBox,{onClick:function onClick(e){return setCasesType(\"cases\");},title:\"Coronavirus Cases\",isRed:true,active:casesType===\"cases\",cases:prettyPrintStat(countryInfo.todayCases),total:numeral(countryInfo.cases).format(\"0.0a\")}),/*#__PURE__*/React.createElement(InfoBox,{onClick:function onClick(e){return setCasesType(\"recovered\");},title:\"Recovered\",active:casesType===\"recovered\",cases:prettyPrintStat(countryInfo.todayRecovered),total:numeral(countryInfo.recovered).format(\"0.0a\")}),/*#__PURE__*/React.createElement(InfoBox,{onClick:function onClick(e){return setCasesType(\"deaths\");},title:\"Deaths\",isRed:true,active:casesType===\"deaths\",cases:prettyPrintStat(countryInfo.todayDeaths),total:numeral(countryInfo.deaths).format(\"0.0a\")})),/*#__PURE__*/React.createElement(Map,{countries:mapCountries,casesType:casesType,center:mapCenter,zoom:mapZoom})),/*#__PURE__*/React.createElement(\"div\",{className:\"app__right\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(\"h3\",null,\" Live cases of the countries.\"),/*#__PURE__*/React.createElement(Table,{countries:tableData}),/*#__PURE__*/React.createElement(\"h3\",{className:\"app__graphTitle\"},\" \",\"Live Graph data of \",casesType,\".\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(LineGraph,{className:\"app__graph\",casesType:casesType})))));}export default App;","map":{"version":3,"sources":["/home/dheemanth/React/covid-19-tracker/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","numeral","InfoBox","Map","Table","sortData","prettyPrintStat","LineGraph","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","lat","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setmapCountries","casesType","setCasesType","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountrychange","event","countryCode","target","console","log","url","long","e","todayCases","cases","format","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport \"./App.css\";\n//Import of other files :-\nimport numeral from \"numeral\";\n\nimport InfoBox from \"./infoBox\";\nimport Map from \"./map\";\nimport Table from \"./Tables\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport LineGraph from \"./LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\n\n//NOTE: UseEffects:- Runs a piece of code only under some given condition.\n// It will run as soon as the component loads for the first time and only once this happens.\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 20.5937, lng: 78.9629 });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setmapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      // https://disease.sh/v3/covid-19/countries\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setmapCountries(data);\n          setCountries(countries);\n        });\n    };\n    getCountriesData();\n  }, []);\n\n  const onCountrychange = async (event) => {\n    const countryCode = event.target.value;\n    console.log(countryCode);\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n        setCountry(countryCode);\n        // console.log(data);\n        countryCode === \"worldwide\"\n          ? setMapCenter({ lat: 20.5937, lng: 78.9629 })\n          : setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 TRACKER</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              className=\"appheader__dropdown\"\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountrychange}\n            >\n              <MenuItem value=\"worldwide\">worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app_stats\">\n          <InfoBox\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Coronavirus Cases\"\n            isRed\n            active={casesType === \"cases\"}\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={numeral(countryInfo.cases).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Recovered\"\n            active={casesType === \"recovered\"}\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={numeral(countryInfo.recovered).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            isRed\n            active={casesType === \"deaths\"}\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={numeral(countryInfo.deaths).format(\"0.0a\")}\n          />\n        </div>\n        <Map\n          countries={mapCountries}\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n\n      <div className=\"app__right\">\n        <Card>\n          <CardContent>\n            {/* Tables of data */}\n            <h3> Live cases of the countries.</h3>\n            <Table countries={tableData}></Table>\n            <h3 className=\"app__graphTitle\">\n              {\" \"}\n              Live Graph data of {casesType}.\n            </h3>\n            <br></br>\n            <LineGraph className=\"app__graph\" casesType={casesType} />\n            {/* Garph of given data  */}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}